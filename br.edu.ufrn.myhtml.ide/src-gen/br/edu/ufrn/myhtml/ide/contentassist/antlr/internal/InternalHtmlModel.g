/*
 * generated by Xtext 2.26.0.M2
 */
grammar InternalHtmlModel;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package br.edu.ufrn.myhtml.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package br.edu.ufrn.myhtml.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import br.edu.ufrn.myhtml.services.HtmlModelGrammarAccess;

}
@parser::members {
	private HtmlModelGrammarAccess grammarAccess;

	public void setGrammarAccess(HtmlModelGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleMyHtmlModel
entryRuleMyHtmlModel
:
{ before(grammarAccess.getMyHtmlModelRule()); }
	 ruleMyHtmlModel
{ after(grammarAccess.getMyHtmlModelRule()); } 
	 EOF 
;

// Rule MyHtmlModel
ruleMyHtmlModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMyHtmlModelAccess().getArticleAssignment()); }
		(rule__MyHtmlModel__ArticleAssignment)
		{ after(grammarAccess.getMyHtmlModelAccess().getArticleAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArticle
entryRuleArticle
:
{ before(grammarAccess.getArticleRule()); }
	 ruleArticle
{ after(grammarAccess.getArticleRule()); } 
	 EOF 
;

// Rule Article
ruleArticle 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArticleAccess().getGroup()); }
		(rule__Article__Group__0)
		{ after(grammarAccess.getArticleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSection
entryRuleSection
:
{ before(grammarAccess.getSectionRule()); }
	 ruleSection
{ after(grammarAccess.getSectionRule()); } 
	 EOF 
;

// Rule Section
ruleSection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSectionAccess().getGroup()); }
		(rule__Section__Group__0)
		{ after(grammarAccess.getSectionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTable
entryRuleTable
:
{ before(grammarAccess.getTableRule()); }
	 ruleTable
{ after(grammarAccess.getTableRule()); } 
	 EOF 
;

// Rule Table
ruleTable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTableAccess().getGroup()); }
		(rule__Table__Group__0)
		{ after(grammarAccess.getTableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHeader
entryRuleHeader
:
{ before(grammarAccess.getHeaderRule()); }
	 ruleHeader
{ after(grammarAccess.getHeaderRule()); } 
	 EOF 
;

// Rule Header
ruleHeader 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHeaderAccess().getGroup()); }
		(rule__Header__Group__0)
		{ after(grammarAccess.getHeaderAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRow
entryRuleRow
:
{ before(grammarAccess.getRowRule()); }
	 ruleRow
{ after(grammarAccess.getRowRule()); } 
	 EOF 
;

// Rule Row
ruleRow 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRowAccess().getGroup()); }
		(rule__Row__Group__0)
		{ after(grammarAccess.getRowAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParagraph
entryRuleParagraph
:
{ before(grammarAccess.getParagraphRule()); }
	 ruleParagraph
{ after(grammarAccess.getParagraphRule()); } 
	 EOF 
;

// Rule Paragraph
ruleParagraph 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParagraphAccess().getGroup()); }
		(rule__Paragraph__Group__0)
		{ after(grammarAccess.getParagraphAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReferences
entryRuleReferences
:
{ before(grammarAccess.getReferencesRule()); }
	 ruleReferences
{ after(grammarAccess.getReferencesRule()); } 
	 EOF 
;

// Rule References
ruleReferences 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReferencesAccess().getGroup()); }
		(rule__References__Group__0)
		{ after(grammarAccess.getReferencesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLink
entryRuleLink
:
{ before(grammarAccess.getLinkRule()); }
	 ruleLink
{ after(grammarAccess.getLinkRule()); } 
	 EOF 
;

// Rule Link
ruleLink 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLinkAccess().getGroup()); }
		(rule__Link__Group__0)
		{ after(grammarAccess.getLinkAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule BasicColors
ruleBasicColors
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicColorsAccess().getAlternatives()); }
		(rule__BasicColors__Alternatives)
		{ after(grammarAccess.getBasicColorsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicColors__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicColorsAccess().getBlackEnumLiteralDeclaration_0()); }
		('black')
		{ after(grammarAccess.getBasicColorsAccess().getBlackEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getBasicColorsAccess().getRedEnumLiteralDeclaration_1()); }
		('red')
		{ after(grammarAccess.getBasicColorsAccess().getRedEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getBasicColorsAccess().getBlueEnumLiteralDeclaration_2()); }
		('blue')
		{ after(grammarAccess.getBasicColorsAccess().getBlueEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getBasicColorsAccess().getGreenEnumLiteralDeclaration_3()); }
		('green')
		{ after(grammarAccess.getBasicColorsAccess().getGreenEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Article__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Article__Group__0__Impl
	rule__Article__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Article__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArticleAccess().getArticleAction_0()); }
	()
	{ after(grammarAccess.getArticleAccess().getArticleAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Article__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Article__Group__1__Impl
	rule__Article__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Article__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArticleAccess().getArticleKeyword_1()); }
	'Article'
	{ after(grammarAccess.getArticleAccess().getArticleKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Article__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Article__Group__2__Impl
	rule__Article__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Article__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArticleAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getArticleAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Article__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Article__Group__3__Impl
	rule__Article__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Article__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArticleAccess().getSectionsAssignment_3()); }
	(rule__Article__SectionsAssignment_3)*
	{ after(grammarAccess.getArticleAccess().getSectionsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Article__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Article__Group__4__Impl
	rule__Article__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Article__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArticleAccess().getReferencesAssignment_4()); }
	(rule__Article__ReferencesAssignment_4)?
	{ after(grammarAccess.getArticleAccess().getReferencesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Article__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Article__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Article__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArticleAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getArticleAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Section__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Section__Group__0__Impl
	rule__Section__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionAccess().getSectionKeyword_0()); }
	'Section'
	{ after(grammarAccess.getSectionAccess().getSectionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Section__Group__1__Impl
	rule__Section__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getSectionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Section__Group__2__Impl
	rule__Section__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionAccess().getTitleKeyword_2()); }
	'title'
	{ after(grammarAccess.getSectionAccess().getTitleKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Section__Group__3__Impl
	rule__Section__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionAccess().getEqualsSignKeyword_3()); }
	'='
	{ after(grammarAccess.getSectionAccess().getEqualsSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Section__Group__4__Impl
	rule__Section__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionAccess().getTitleAssignment_4()); }
	(rule__Section__TitleAssignment_4)
	{ after(grammarAccess.getSectionAccess().getTitleAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Section__Group__5__Impl
	rule__Section__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionAccess().getGroup_5()); }
	(rule__Section__Group_5__0)?
	{ after(grammarAccess.getSectionAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Section__Group__6__Impl
	rule__Section__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getSectionAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Section__Group__7__Impl
	rule__Section__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionAccess().getLeftCurlyBracketKeyword_7()); }
	'{'
	{ after(grammarAccess.getSectionAccess().getLeftCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Section__Group__8__Impl
	rule__Section__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionAccess().getParagraphsAssignment_8()); }
	(rule__Section__ParagraphsAssignment_8)*
	{ after(grammarAccess.getSectionAccess().getParagraphsAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Section__Group__9__Impl
	rule__Section__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionAccess().getTablesAssignment_9()); }
	(rule__Section__TablesAssignment_9)*
	{ after(grammarAccess.getSectionAccess().getTablesAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Section__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionAccess().getRightCurlyBracketKeyword_10()); }
	'}'
	{ after(grammarAccess.getSectionAccess().getRightCurlyBracketKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Section__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Section__Group_5__0__Impl
	rule__Section__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionAccess().getCommaKeyword_5_0()); }
	','
	{ after(grammarAccess.getSectionAccess().getCommaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Section__Group_5__1__Impl
	rule__Section__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionAccess().getSizeKeyword_5_1()); }
	'size'
	{ after(grammarAccess.getSectionAccess().getSizeKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Section__Group_5__2__Impl
	rule__Section__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionAccess().getEqualsSignKeyword_5_2()); }
	'='
	{ after(grammarAccess.getSectionAccess().getEqualsSignKeyword_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Section__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionAccess().getSizeAssignment_5_3()); }
	(rule__Section__SizeAssignment_5_3)
	{ after(grammarAccess.getSectionAccess().getSizeAssignment_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__0__Impl
	rule__Table__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getTableKeyword_0()); }
	'Table'
	{ after(grammarAccess.getTableAccess().getTableKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__1__Impl
	rule__Table__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getTableAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__2__Impl
	rule__Table__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getHeaderAssignment_2()); }
	(rule__Table__HeaderAssignment_2)
	{ after(grammarAccess.getTableAccess().getHeaderAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__3__Impl
	rule__Table__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getTableAccess().getRowsAssignment_3()); }
		(rule__Table__RowsAssignment_3)
		{ after(grammarAccess.getTableAccess().getRowsAssignment_3()); }
	)
	(
		{ before(grammarAccess.getTableAccess().getRowsAssignment_3()); }
		(rule__Table__RowsAssignment_3)*
		{ after(grammarAccess.getTableAccess().getRowsAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getTableAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Header__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header__Group__0__Impl
	rule__Header__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Header__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeaderAccess().getHeaderAction_0()); }
	()
	{ after(grammarAccess.getHeaderAccess().getHeaderAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header__Group__1__Impl
	rule__Header__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Header__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeaderAccess().getHeaderKeyword_1()); }
	'Header'
	{ after(grammarAccess.getHeaderAccess().getHeaderKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header__Group__2__Impl
	rule__Header__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Header__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeaderAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getHeaderAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header__Group__3__Impl
	rule__Header__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Header__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeaderAccess().getTableHeaderDataAssignment_3()); }
	(rule__Header__TableHeaderDataAssignment_3)*
	{ after(grammarAccess.getHeaderAccess().getTableHeaderDataAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Header__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeaderAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getHeaderAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Row__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Row__Group__0__Impl
	rule__Row__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRowAccess().getRowAction_0()); }
	()
	{ after(grammarAccess.getRowAccess().getRowAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Row__Group__1__Impl
	rule__Row__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRowAccess().getRowKeyword_1()); }
	'Row'
	{ after(grammarAccess.getRowAccess().getRowKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Row__Group__2__Impl
	rule__Row__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRowAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getRowAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Row__Group__3__Impl
	rule__Row__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRowAccess().getTableRowDataAssignment_3()); }
	(rule__Row__TableRowDataAssignment_3)*
	{ after(grammarAccess.getRowAccess().getTableRowDataAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Row__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRowAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getRowAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Paragraph__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Paragraph__Group__0__Impl
	rule__Paragraph__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Paragraph__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParagraphAccess().getParagraphKeyword_0()); }
	'Paragraph'
	{ after(grammarAccess.getParagraphAccess().getParagraphKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Paragraph__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Paragraph__Group__1__Impl
	rule__Paragraph__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Paragraph__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParagraphAccess().getGroup_1()); }
	(rule__Paragraph__Group_1__0)?
	{ after(grammarAccess.getParagraphAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Paragraph__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Paragraph__Group__2__Impl
	rule__Paragraph__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Paragraph__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParagraphAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getParagraphAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Paragraph__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Paragraph__Group__3__Impl
	rule__Paragraph__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Paragraph__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParagraphAccess().getContentAssignment_3()); }
	(rule__Paragraph__ContentAssignment_3)
	{ after(grammarAccess.getParagraphAccess().getContentAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Paragraph__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Paragraph__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Paragraph__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParagraphAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getParagraphAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Paragraph__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Paragraph__Group_1__0__Impl
	rule__Paragraph__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Paragraph__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParagraphAccess().getLeftParenthesisKeyword_1_0()); }
	'('
	{ after(grammarAccess.getParagraphAccess().getLeftParenthesisKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Paragraph__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Paragraph__Group_1__1__Impl
	rule__Paragraph__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Paragraph__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParagraphAccess().getColorKeyword_1_1()); }
	'color'
	{ after(grammarAccess.getParagraphAccess().getColorKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Paragraph__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Paragraph__Group_1__2__Impl
	rule__Paragraph__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Paragraph__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParagraphAccess().getEqualsSignKeyword_1_2()); }
	'='
	{ after(grammarAccess.getParagraphAccess().getEqualsSignKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Paragraph__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Paragraph__Group_1__3__Impl
	rule__Paragraph__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Paragraph__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParagraphAccess().getColorAssignment_1_3()); }
	(rule__Paragraph__ColorAssignment_1_3)
	{ after(grammarAccess.getParagraphAccess().getColorAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Paragraph__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Paragraph__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Paragraph__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParagraphAccess().getRightParenthesisKeyword_1_4()); }
	')'
	{ after(grammarAccess.getParagraphAccess().getRightParenthesisKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__References__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__References__Group__0__Impl
	rule__References__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__References__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferencesAccess().getReferencesAction_0()); }
	()
	{ after(grammarAccess.getReferencesAccess().getReferencesAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__References__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__References__Group__1__Impl
	rule__References__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__References__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferencesAccess().getReferencesKeyword_1()); }
	'References'
	{ after(grammarAccess.getReferencesAccess().getReferencesKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__References__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__References__Group__2__Impl
	rule__References__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__References__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferencesAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getReferencesAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__References__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__References__Group__3__Impl
	rule__References__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__References__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferencesAccess().getLinksAssignment_3()); }
	(rule__References__LinksAssignment_3)*
	{ after(grammarAccess.getReferencesAccess().getLinksAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__References__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__References__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__References__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferencesAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getReferencesAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Link__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group__0__Impl
	rule__Link__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getLinkAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getGroup_1()); }
	(rule__Link__Group_1__0)*
	{ after(grammarAccess.getLinkAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Link__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group_1__0__Impl
	rule__Link__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getLinkAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getLinkAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MyHtmlModel__ArticleAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMyHtmlModelAccess().getArticleArticleParserRuleCall_0()); }
		ruleArticle
		{ after(grammarAccess.getMyHtmlModelAccess().getArticleArticleParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Article__SectionsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArticleAccess().getSectionsSectionParserRuleCall_3_0()); }
		ruleSection
		{ after(grammarAccess.getArticleAccess().getSectionsSectionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Article__ReferencesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArticleAccess().getReferencesReferencesParserRuleCall_4_0()); }
		ruleReferences
		{ after(grammarAccess.getArticleAccess().getReferencesReferencesParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__TitleAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSectionAccess().getTitleSTRINGTerminalRuleCall_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getSectionAccess().getTitleSTRINGTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__SizeAssignment_5_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSectionAccess().getSizeHINTTerminalRuleCall_5_3_0()); }
		RULE_HINT
		{ after(grammarAccess.getSectionAccess().getSizeHINTTerminalRuleCall_5_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__ParagraphsAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSectionAccess().getParagraphsParagraphParserRuleCall_8_0()); }
		ruleParagraph
		{ after(grammarAccess.getSectionAccess().getParagraphsParagraphParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__TablesAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSectionAccess().getTablesTableParserRuleCall_9_0()); }
		ruleTable
		{ after(grammarAccess.getSectionAccess().getTablesTableParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__HeaderAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getHeaderHeaderParserRuleCall_2_0()); }
		ruleHeader
		{ after(grammarAccess.getTableAccess().getHeaderHeaderParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__RowsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getRowsRowParserRuleCall_3_0()); }
		ruleRow
		{ after(grammarAccess.getTableAccess().getRowsRowParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header__TableHeaderDataAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHeaderAccess().getTableHeaderDataSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getHeaderAccess().getTableHeaderDataSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__TableRowDataAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRowAccess().getTableRowDataSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getRowAccess().getTableRowDataSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Paragraph__ColorAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParagraphAccess().getColorBasicColorsEnumRuleCall_1_3_0()); }
		ruleBasicColors
		{ after(grammarAccess.getParagraphAccess().getColorBasicColorsEnumRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Paragraph__ContentAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParagraphAccess().getContentSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getParagraphAccess().getContentSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__References__LinksAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferencesAccess().getLinksLinkParserRuleCall_3_0()); }
		ruleLink
		{ after(grammarAccess.getReferencesAccess().getLinksLinkParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_HINT : '1'..'6';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
