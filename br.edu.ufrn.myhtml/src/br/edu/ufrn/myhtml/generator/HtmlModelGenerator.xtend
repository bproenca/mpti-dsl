/*
 * generated by Xtext 2.26.0.M2
 */
package br.edu.ufrn.myhtml.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import br.edu.ufrn.myhtml.htmlModel.MyHtmlModel
import br.edu.ufrn.myhtml.htmlModel.Section
import br.edu.ufrn.myhtml.htmlModel.Paragraph
import br.edu.ufrn.myhtml.htmlModel.References

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class HtmlModelGenerator extends AbstractGenerator {

	String filename
	
	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		filename = resource.getURI().segment(resource.getURI().segmentCount()-1).replace("myhtml", "html")
		System.out.println(">>" + filename)
		
		fsa.generateFile(filename,  
			resource.allContents
				.filter(MyHtmlModel)
				.map[compile]
				.join(', '))
	}
	
	private def compile(MyHtmlModel html) '''	
		<!DOCTYPE html>
		<html>
		  <head>
		    <title>My Web Page</title>
		  </head>
		  <body>
			«FOR s : html.article.sections»
	            «s.compile»
	        «ENDFOR»
	        «IF html.article.references !== null»
                «html.article.references.compile»
            «ENDIF»
		  </body>
		</html>
	'''
	
	private def compile(Section s) '''
		«IF s.size > 0»
		<h«s.size»> «s.title» </h«s.size»>
	    «ELSE»
		<h1> «s.title» </h1>
	    «ENDIF»	
		
		«FOR p : s.paragraphs»
            «p.compile»
        «ENDFOR»
	'''

	private def compile(Paragraph p) '''
        <p style="color: «p.color»">
        «p.content»
        </p>
    '''
    
    private def compile(References r) '''
		<h1>References:</h1>
		<ul>
		«FOR l : r.links»
			<li><a href=https://«l»>«l»</a></li>
		«ENDFOR»
		</ul>
    '''
}
