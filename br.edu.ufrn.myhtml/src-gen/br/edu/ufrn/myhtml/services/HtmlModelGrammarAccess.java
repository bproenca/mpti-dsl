/*
 * generated by Xtext 2.26.0.M2
 */
package br.edu.ufrn.myhtml.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class HtmlModelGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class MyHtmlModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.ufrn.myhtml.HtmlModel.MyHtmlModel");
		private final Assignment cArticleAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cArticleArticleParserRuleCall_0 = (RuleCall)cArticleAssignment.eContents().get(0);
		
		//MyHtmlModel:
		//    article = Article;
		@Override public ParserRule getRule() { return rule; }
		
		//article = Article
		public Assignment getArticleAssignment() { return cArticleAssignment; }
		
		//Article
		public RuleCall getArticleArticleParserRuleCall_0() { return cArticleArticleParserRuleCall_0; }
	}
	public class ArticleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.ufrn.myhtml.HtmlModel.Article");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cArticleAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cArticleKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSectionsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSectionsSectionParserRuleCall_3_0 = (RuleCall)cSectionsAssignment_3.eContents().get(0);
		private final Assignment cReferencesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cReferencesReferencesParserRuleCall_4_0 = (RuleCall)cReferencesAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Article:
		//    {Article} 'Article' '{'
		//    (sections+=Section)*
		//    references=References?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Article} 'Article' '{'
		//(sections+=Section)*
		//references=References?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Article}
		public Action getArticleAction_0() { return cArticleAction_0; }
		
		//'Article'
		public Keyword getArticleKeyword_1() { return cArticleKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//(sections+=Section)*
		public Assignment getSectionsAssignment_3() { return cSectionsAssignment_3; }
		
		//Section
		public RuleCall getSectionsSectionParserRuleCall_3_0() { return cSectionsSectionParserRuleCall_3_0; }
		
		//references=References?
		public Assignment getReferencesAssignment_4() { return cReferencesAssignment_4; }
		
		//References
		public RuleCall getReferencesReferencesParserRuleCall_4_0() { return cReferencesReferencesParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class SectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.ufrn.myhtml.HtmlModel.Section");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSectionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cTitleKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cEqualsSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTitleAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTitleSTRINGTerminalRuleCall_4_0 = (RuleCall)cTitleAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cSizeKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Keyword cEqualsSignKeyword_5_2 = (Keyword)cGroup_5.eContents().get(2);
		private final Assignment cSizeAssignment_5_3 = (Assignment)cGroup_5.eContents().get(3);
		private final RuleCall cSizeHINTTerminalRuleCall_5_3_0 = (RuleCall)cSizeAssignment_5_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cLeftCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cParagraphsAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cParagraphsParagraphParserRuleCall_8_0 = (RuleCall)cParagraphsAssignment_8.eContents().get(0);
		private final Assignment cTablesAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cTablesTableParserRuleCall_9_0 = (RuleCall)cTablesAssignment_9.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//Section:
		//    'Section' '(' 'title' '=' title=STRING (',' 'size' '=' size=HINT )? ')' '{'
		//    (paragraphs+=Paragraph)*
		//    (tables+=Table)*
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Section' '(' 'title' '=' title=STRING (',' 'size' '=' size=HINT )? ')' '{'
		//(paragraphs+=Paragraph)*
		//(tables+=Table)*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Section'
		public Keyword getSectionKeyword_0() { return cSectionKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//'title'
		public Keyword getTitleKeyword_2() { return cTitleKeyword_2; }
		
		//'='
		public Keyword getEqualsSignKeyword_3() { return cEqualsSignKeyword_3; }
		
		//title=STRING
		public Assignment getTitleAssignment_4() { return cTitleAssignment_4; }
		
		//STRING
		public RuleCall getTitleSTRINGTerminalRuleCall_4_0() { return cTitleSTRINGTerminalRuleCall_4_0; }
		
		//(',' 'size' '=' size=HINT )?
		public Group getGroup_5() { return cGroup_5; }
		
		//','
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }
		
		//'size'
		public Keyword getSizeKeyword_5_1() { return cSizeKeyword_5_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_5_2() { return cEqualsSignKeyword_5_2; }
		
		//size=HINT
		public Assignment getSizeAssignment_5_3() { return cSizeAssignment_5_3; }
		
		//HINT
		public RuleCall getSizeHINTTerminalRuleCall_5_3_0() { return cSizeHINTTerminalRuleCall_5_3_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7() { return cLeftCurlyBracketKeyword_7; }
		
		//(paragraphs+=Paragraph)*
		public Assignment getParagraphsAssignment_8() { return cParagraphsAssignment_8; }
		
		//Paragraph
		public RuleCall getParagraphsParagraphParserRuleCall_8_0() { return cParagraphsParagraphParserRuleCall_8_0; }
		
		//(tables+=Table)*
		public Assignment getTablesAssignment_9() { return cTablesAssignment_9; }
		
		//Table
		public RuleCall getTablesTableParserRuleCall_9_0() { return cTablesTableParserRuleCall_9_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}
	public class TableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.ufrn.myhtml.HtmlModel.Table");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTableKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cHeaderAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cHeaderHeaderParserRuleCall_2_0 = (RuleCall)cHeaderAssignment_2.eContents().get(0);
		private final Assignment cRowsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cRowsRowParserRuleCall_3_0 = (RuleCall)cRowsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Table:
		//    'Table' '{'
		//        header = Header
		//        (rows+=Row)+
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Table' '{'
		//    header = Header
		//    (rows+=Row)+
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Table'
		public Keyword getTableKeyword_0() { return cTableKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//header = Header
		public Assignment getHeaderAssignment_2() { return cHeaderAssignment_2; }
		
		//Header
		public RuleCall getHeaderHeaderParserRuleCall_2_0() { return cHeaderHeaderParserRuleCall_2_0; }
		
		//(rows+=Row)+
		public Assignment getRowsAssignment_3() { return cRowsAssignment_3; }
		
		//Row
		public RuleCall getRowsRowParserRuleCall_3_0() { return cRowsRowParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class HeaderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.ufrn.myhtml.HtmlModel.Header");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cHeaderAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cHeaderKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTableHeaderDataAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTableHeaderDataSTRINGTerminalRuleCall_3_0 = (RuleCall)cTableHeaderDataAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Header:
		//    {Header} 'Header' '{'
		//        (tableHeaderData+=STRING)*
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Header} 'Header' '{'
		//    (tableHeaderData+=STRING)*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Header}
		public Action getHeaderAction_0() { return cHeaderAction_0; }
		
		//'Header'
		public Keyword getHeaderKeyword_1() { return cHeaderKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//(tableHeaderData+=STRING)*
		public Assignment getTableHeaderDataAssignment_3() { return cTableHeaderDataAssignment_3; }
		
		//STRING
		public RuleCall getTableHeaderDataSTRINGTerminalRuleCall_3_0() { return cTableHeaderDataSTRINGTerminalRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class RowElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.ufrn.myhtml.HtmlModel.Row");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRowAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRowKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTableRowDataAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTableRowDataSTRINGTerminalRuleCall_3_0 = (RuleCall)cTableRowDataAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Row:
		//    {Row} 'Row' '{'
		//        (tableRowData+=STRING)*
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Row} 'Row' '{'
		//    (tableRowData+=STRING)*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Row}
		public Action getRowAction_0() { return cRowAction_0; }
		
		//'Row'
		public Keyword getRowKeyword_1() { return cRowKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//(tableRowData+=STRING)*
		public Assignment getTableRowDataAssignment_3() { return cTableRowDataAssignment_3; }
		
		//STRING
		public RuleCall getTableRowDataSTRINGTerminalRuleCall_3_0() { return cTableRowDataSTRINGTerminalRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class ParagraphElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.ufrn.myhtml.HtmlModel.Paragraph");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cParagraphKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cColorKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Keyword cEqualsSignKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Assignment cColorAssignment_1_3 = (Assignment)cGroup_1.eContents().get(3);
		private final RuleCall cColorBasicColorsEnumRuleCall_1_3_0 = (RuleCall)cColorAssignment_1_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cContentAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cContentSTRINGTerminalRuleCall_3_0 = (RuleCall)cContentAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Paragraph:
		//    'Paragraph' ('(' 'color' '=' color=BasicColors ')')? '{'
		//    content=STRING
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Paragraph' ('(' 'color' '=' color=BasicColors ')')? '{'
		//content=STRING
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Paragraph'
		public Keyword getParagraphKeyword_0() { return cParagraphKeyword_0; }
		
		//('(' 'color' '=' color=BasicColors ')')?
		public Group getGroup_1() { return cGroup_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1_0() { return cLeftParenthesisKeyword_1_0; }
		
		//'color'
		public Keyword getColorKeyword_1_1() { return cColorKeyword_1_1; }
		
		//'='
		public Keyword getEqualsSignKeyword_1_2() { return cEqualsSignKeyword_1_2; }
		
		//color=BasicColors
		public Assignment getColorAssignment_1_3() { return cColorAssignment_1_3; }
		
		//BasicColors
		public RuleCall getColorBasicColorsEnumRuleCall_1_3_0() { return cColorBasicColorsEnumRuleCall_1_3_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_1_4() { return cRightParenthesisKeyword_1_4; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//content=STRING
		public Assignment getContentAssignment_3() { return cContentAssignment_3; }
		
		//STRING
		public RuleCall getContentSTRINGTerminalRuleCall_3_0() { return cContentSTRINGTerminalRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class ReferencesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.ufrn.myhtml.HtmlModel.References");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cReferencesAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cReferencesKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cLinksAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLinksLinkParserRuleCall_3_0 = (RuleCall)cLinksAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//References:
		//    {References} 'References' '{'
		//        (links+=Link)*
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{References} 'References' '{'
		//    (links+=Link)*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{References}
		public Action getReferencesAction_0() { return cReferencesAction_0; }
		
		//'References'
		public Keyword getReferencesKeyword_1() { return cReferencesKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//(links+=Link)*
		public Assignment getLinksAssignment_3() { return cLinksAssignment_3; }
		
		//Link
		public RuleCall getLinksLinkParserRuleCall_3_0() { return cLinksLinkParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class LinkElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.ufrn.myhtml.HtmlModel.Link");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//Link:
		//    ID('.' ID)*;
		@Override public ParserRule getRule() { return rule; }
		
		//ID('.' ID)*
		public Group getGroup() { return cGroup; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//('.' ID)*
		public Group getGroup_1() { return cGroup_1; }
		
		//'.'
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}
	
	public class BasicColorsElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.ufrn.myhtml.HtmlModel.BasicColors");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cBlackEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cBlackBlackKeyword_0_0 = (Keyword)cBlackEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cRedEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cRedRedKeyword_1_0 = (Keyword)cRedEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cBlueEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cBlueBlueKeyword_2_0 = (Keyword)cBlueEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cGreenEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cGreenGreenKeyword_3_0 = (Keyword)cGreenEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum BasicColors:
		//    black |
		//    red |
		//    blue |
		//    green;
		public EnumRule getRule() { return rule; }
		
		//black |
		//red |
		//blue |
		//green
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//black
		public EnumLiteralDeclaration getBlackEnumLiteralDeclaration_0() { return cBlackEnumLiteralDeclaration_0; }
		
		public Keyword getBlackBlackKeyword_0_0() { return cBlackBlackKeyword_0_0; }
		
		//red
		public EnumLiteralDeclaration getRedEnumLiteralDeclaration_1() { return cRedEnumLiteralDeclaration_1; }
		
		public Keyword getRedRedKeyword_1_0() { return cRedRedKeyword_1_0; }
		
		//blue
		public EnumLiteralDeclaration getBlueEnumLiteralDeclaration_2() { return cBlueEnumLiteralDeclaration_2; }
		
		public Keyword getBlueBlueKeyword_2_0() { return cBlueBlueKeyword_2_0; }
		
		//green
		public EnumLiteralDeclaration getGreenEnumLiteralDeclaration_3() { return cGreenEnumLiteralDeclaration_3; }
		
		public Keyword getGreenGreenKeyword_3_0() { return cGreenGreenKeyword_3_0; }
	}
	
	private final MyHtmlModelElements pMyHtmlModel;
	private final ArticleElements pArticle;
	private final SectionElements pSection;
	private final TableElements pTable;
	private final HeaderElements pHeader;
	private final RowElements pRow;
	private final ParagraphElements pParagraph;
	private final ReferencesElements pReferences;
	private final LinkElements pLink;
	private final TerminalRule tHINT;
	private final BasicColorsElements eBasicColors;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public HtmlModelGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pMyHtmlModel = new MyHtmlModelElements();
		this.pArticle = new ArticleElements();
		this.pSection = new SectionElements();
		this.pTable = new TableElements();
		this.pHeader = new HeaderElements();
		this.pRow = new RowElements();
		this.pParagraph = new ParagraphElements();
		this.pReferences = new ReferencesElements();
		this.pLink = new LinkElements();
		this.tHINT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "br.edu.ufrn.myhtml.HtmlModel.HINT");
		this.eBasicColors = new BasicColorsElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("br.edu.ufrn.myhtml.HtmlModel".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//MyHtmlModel:
	//    article = Article;
	public MyHtmlModelElements getMyHtmlModelAccess() {
		return pMyHtmlModel;
	}
	
	public ParserRule getMyHtmlModelRule() {
		return getMyHtmlModelAccess().getRule();
	}
	
	//Article:
	//    {Article} 'Article' '{'
	//    (sections+=Section)*
	//    references=References?
	//    '}';
	public ArticleElements getArticleAccess() {
		return pArticle;
	}
	
	public ParserRule getArticleRule() {
		return getArticleAccess().getRule();
	}
	
	//Section:
	//    'Section' '(' 'title' '=' title=STRING (',' 'size' '=' size=HINT )? ')' '{'
	//    (paragraphs+=Paragraph)*
	//    (tables+=Table)*
	//    '}';
	public SectionElements getSectionAccess() {
		return pSection;
	}
	
	public ParserRule getSectionRule() {
		return getSectionAccess().getRule();
	}
	
	//Table:
	//    'Table' '{'
	//        header = Header
	//        (rows+=Row)+
	//    '}';
	public TableElements getTableAccess() {
		return pTable;
	}
	
	public ParserRule getTableRule() {
		return getTableAccess().getRule();
	}
	
	//Header:
	//    {Header} 'Header' '{'
	//        (tableHeaderData+=STRING)*
	//    '}';
	public HeaderElements getHeaderAccess() {
		return pHeader;
	}
	
	public ParserRule getHeaderRule() {
		return getHeaderAccess().getRule();
	}
	
	//Row:
	//    {Row} 'Row' '{'
	//        (tableRowData+=STRING)*
	//    '}';
	public RowElements getRowAccess() {
		return pRow;
	}
	
	public ParserRule getRowRule() {
		return getRowAccess().getRule();
	}
	
	//Paragraph:
	//    'Paragraph' ('(' 'color' '=' color=BasicColors ')')? '{'
	//    content=STRING
	//    '}';
	public ParagraphElements getParagraphAccess() {
		return pParagraph;
	}
	
	public ParserRule getParagraphRule() {
		return getParagraphAccess().getRule();
	}
	
	//References:
	//    {References} 'References' '{'
	//        (links+=Link)*
	//    '}';
	public ReferencesElements getReferencesAccess() {
		return pReferences;
	}
	
	public ParserRule getReferencesRule() {
		return getReferencesAccess().getRule();
	}
	
	//Link:
	//    ID('.' ID)*;
	public LinkElements getLinkAccess() {
		return pLink;
	}
	
	public ParserRule getLinkRule() {
		return getLinkAccess().getRule();
	}
	
	//terminal HINT returns ecore::EInt: ('1'..'6');
	public TerminalRule getHINTRule() {
		return tHINT;
	}
	
	//enum BasicColors:
	//    black |
	//    red |
	//    blue |
	//    green;
	public BasicColorsElements getBasicColorsAccess() {
		return eBasicColors;
	}
	
	public EnumRule getBasicColorsRule() {
		return getBasicColorsAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
